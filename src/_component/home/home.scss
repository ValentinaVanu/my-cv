// introduce $class variable to hold value
// of the prefix of all css classes in this file
// Examples:
// .#{$class} -> .home
// .#{$class}-item -> .home-time
$class: 'home';

// Starting with a percentege sign % instead of . or #
// will not output this to CSS. The advantege is that
// we can call this piece of code using @extend and
// keep our code DRY (dont repeat yourself)
%uppercase {
  // Transform all characters to upper case
  // Ex: This is Ultra -> THIS IS ULTRA
  text-transform: uppercase;
}

.#{$class} {
  // @extend %section;
  display: flex;
  justify-content: center;
  align-items: center;
}

.#{$class}-wrapper {
  text-align: center;
}

.#{$class}-name {
  @extend %uppercase;
  font-size: 5rem;
}

.#{$class}-title {
  @extend %uppercase;
  font-size: 2rem;
}

.#{$class}-item {
  // we create some smacing between list items using padding
  // the first value will apply to padding-top and padding-bottom
  // the second value will apply to padding-right and padding-left
  padding: 0.5rem 0.8rem;
}

.#{$class}-linkc{
  font-size:3rem;
  // Remove the default underline present in anchor tags
  text-decoration: none;
}

.#{$class}-social {
  // the ul tag has 100% width. we use display inline-flex
  // so the container no longer breaks on new line
  display: inline-flex;
  // we use max-width 8- viewport width which means
  // 80% of the width that we can view on the screen
  max-width: 80vw;
  // if the total width of the children exeeds in the available
  // width provider by this container break the res of the
  // content on new line
  flex-wrap: wrap;
  // set the items that break on new lines to be align center
  // it's very similar to text-align: center
  justify-content: center;
}
